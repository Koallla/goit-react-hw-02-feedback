{"version":3,"sources":["components/FeedbackOptions/feedback.module.css","components/Statistic/Statistic.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js","components/Statistics/statistics.module.css","components/App/app.module.css"],"names":["module","exports","Statistic","label","value","percents","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","FeedbackOptions","onLeaveFeedback","btn","name","type","onClick","Section","title","children","Notification","message","App","state","countPositiveFeedbackPercentage","countTotalFeedback","toFixed","handleChange","e","target","setState","prevState","this","countPositiveFeedback","Number","container","Component","ReactDOM","render","document","querySelector"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,IAAM,wB,2JCElBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,SAAjB,OAChB,6BACE,8BACGF,EADH,KACYC,EACTC,GAAY,sCAKnBH,EAAUI,aAAe,CACvBD,UAAU,GASGH,Q,gBCCAK,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,yBAAKC,UAAWC,IAAOC,YACrB,kBAAC,EAAD,CAAWZ,MAAM,OAAOC,MAAOI,IAC/B,kBAAC,EAAD,CAAWL,MAAM,UAAUC,MAAOK,IAClC,kBAAC,EAAD,CAAWN,MAAM,MAAMC,MAAOM,IAC9B,kBAAC,EAAD,CAAWP,MAAM,QAAQC,MAAOO,IAChC,kBAAC,EAAD,CAAWR,MAAM,oBAAoBC,MAAOQ,EAAoBP,UAAQ,M,gBC2B7DW,EAlCS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,6BACE,qDACA,4BACEJ,UAAWC,IAAOI,IAClBC,KAAK,OACLC,KAAK,SACLC,QAASJ,GAJX,QAQA,4BACEJ,UAAWC,IAAOI,IAClBC,KAAK,UACLC,KAAK,SACLC,QAASJ,GAJX,WAQA,4BACEJ,UAAWC,IAAOI,IAClBC,KAAK,MACLC,KAAK,SACLC,QAASJ,GAJX,SCRWK,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,I,gBCIrBC,E,2MACnBC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,gCAAkC,WAMhC,OALiB,EAAKD,MAAdpB,KAEE,EAAKsB,qBACb,KACAC,W,EAIJC,aAAe,SAAAC,GAAM,IACXd,EAASc,EAAEC,OAAXf,KACR,EAAKgB,UAAS,SAAAC,GAAS,sBACpBjB,EAAOiB,EAAUjB,GAAQ,MAE5B,EAAKW,qBACL,EAAKD,mC,EAGPC,mBAAqB,WAAO,IAAD,EACM,EAAKF,MAEpC,OAHyB,EACjBpB,KADiB,EACXC,QADW,EACFC,K,wEAKf,IAAD,EACwB2B,KAAKT,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ0B,KAAKP,qBACbQ,EAAwBC,OAC5BF,KAAKR,mCAGP,OACE,yBAAKhB,UAAWC,IAAO0B,WACrB,kBAAC,EAAD,CAASjB,MAAM,YACb,kBAAC,EAAD,CAAiBN,gBAAiBoB,KAAKL,gBAGzC,kBAAC,EAAD,CAAST,MAAM,aACZf,GAAQC,GAAWC,EAClB,kBAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB0B,IAGtB,kBAAC,EAAD,CAAcZ,QAAQ,4B,GAtDDe,aCHjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCHhD7C,EAAOC,QAAU,CAAC,WAAa,iC,kBCA/BD,EAAOC,QAAU,CAAC,UAAY,0B","file":"static/js/main.4387f52f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"feedback_btn__3SzLb\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ label, value, percents }) => (\n  <div>\n    <span>\n      {label}: {value}\n      {percents && <span>%</span>}\n    </span>\n  </div>\n);\n\nStatistic.defaultProps = {\n  percents: false,\n};\n\nStatistic.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  percents: PropTypes.bool,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Statistic from '../Statistic/Statistic';\nimport styles from './statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={styles.statistics}>\n    <Statistic label=\"Good\" value={good} />\n    <Statistic label=\"Neutral\" value={neutral} />\n    <Statistic label=\"Bad\" value={bad} />\n    <Statistic label=\"Total\" value={total} />\n    <Statistic label=\"Positive feedback\" value={positivePercentage} percents />\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './feedback.module.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <div>\n    <h2>Please leave feedback</h2>\n    <button\n      className={styles.btn}\n      name=\"good\"\n      type=\"button\"\n      onClick={onLeaveFeedback}\n    >\n      Good\n    </button>\n    <button\n      className={styles.btn}\n      name=\"neutral\"\n      type=\"button\"\n      onClick={onLeaveFeedback}\n    >\n      Neutral\n    </button>\n    <button\n      className={styles.btn}\n      name=\"bad\"\n      type=\"button\"\n      onClick={onLeaveFeedback}\n    >\n      Bad\n    </button>\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\nimport styles from './app.module.css';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const countPositiveFeedback = (\n      (good / this.countTotalFeedback()) *\n      100\n    ).toFixed();\n    return countPositiveFeedback;\n  };\n\n  handleChange = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const countPositiveFeedback = Number(\n      this.countPositiveFeedbackPercentage(),\n    );\n\n    return (\n      <div className={styles.container}>\n        <Section title=\"Feedback\">\n          <FeedbackOptions onLeaveFeedback={this.handleChange} />\n        </Section>\n\n        <Section title=\"Statistic\">\n          {good || neutral || bad ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={countPositiveFeedback}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__1Fyjo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2z7ZP\"};"],"sourceRoot":""}